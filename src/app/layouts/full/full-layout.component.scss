@import "../../../assets/sass/scss/gradient-variables";

:host /deep/ .ct-grid{
  stroke-dasharray: 0px;
  stroke: rgba(0, 0, 0, 0.1);
}

:host /deep/ .ct-label{
  font-size: 0.9rem;
}

// Line with Area Chart CSS Starts

:host /deep/ .lineArea .ct-series-a .ct-area {
  fill-opacity: 0.7;
  fill:url($dashboard1-gradient-path +  #gradient1) !important;
}

:host /deep/ .lineArea .ct-series-b .ct-area {
  fill: url($dashboard1-gradient-path +  #gradient) !important;
  fill-opacity: 0.9;
}
:host /deep/ .lineArea .ct-line{
  stroke-width: 0px;
}
:host /deep/ .lineArea .ct-point {
  stroke-width: 0px;
}

// Line with Area Chart 1 CSS Ends

// Stack Bar Chart CSS Starts

:host /deep/ .Stackbarchart{
  .ct-series-a {
    .ct-bar{
      stroke: url($dashboard1-gradient-path +  #linear) !important
    }
  }
  .ct-series-b {
    .ct-bar{
      stroke: #e9e9e9;
    }
  }
}

// Stack Bar Chart CSS Ends

// Line with Area Chart 2 CSS Starts

:host /deep/ .lineArea2 .ct-series-a .ct-area {
  fill: url($dashboard1-gradient-path +  #gradient2) !important;
}

:host /deep/ .lineArea2 .ct-series-b .ct-area {
  fill: url($dashboard1-gradient-path +  #gradient3) !important;
}

:host /deep/ .lineArea2 .ct-point-circle {
  stroke-width: 2px;
  fill: white;
}

:host /deep/ .lineArea2 .ct-series-b .ct-point-circle{
  stroke: #843cf7;
}

:host /deep/ .lineArea2 .ct-series-b .ct-line{
  stroke: #A675F4;
}

:host /deep/ .lineArea2 .ct-series-a .ct-point-circle {
  stroke: #31afb2;
}

:host /deep/ .lineArea2 .ct-line {
  fill: none;
  stroke-width: 2px;
}

// Line with Area Chart 2 CSS Ends

// Line Chart CSS Starts

:host /deep/ .lineChart .ct-point-circle {
  stroke-width: 2px;
  fill: white;
}

:host /deep/ .lineChart .ct-series-a .ct-point-circle {
  stroke: white;
}

:host /deep/ .lineChart .ct-line {
  fill: none;
  stroke: white;
  stroke-width: 1px;
}

:host /deep/ .lineChart .ct-label {
  color: #FFF;
}

:host /deep/ .lineChartShadow {
  -webkit-filter: drop-shadow( 0px 25px 8px rgba(0,0,0,0.3) );
  filter: drop-shadow( 0px 25px 8px rgba(0,0,0,0.3) ); /* Same syntax as box-shadow, except
                                                       for the spread property */
}

// Line Chart  CSS Ends

// Donut Chart  CSS Ends
:host /deep/ .donut .ct-done .ct-slice-donut {
  stroke: #0CC27E;
  stroke-width: 24px !important;
}
:host /deep/ .donut .ct-progress .ct-slice-donut {
  stroke: #FFC107;
  stroke-width: 16px !important;
}
:host /deep/ .donut .ct-outstanding .ct-slice-donut {
  stroke: #7E57C2;
  stroke-width: 8px !important;
}

:host /deep/ .donut .ct-started .ct-slice-donut {
  stroke: #2196F3;
  stroke-width: 32px !important;
}

:host /deep/ .donut .ct-label {
  text-anchor: middle;
  alignment-baseline: middle;
  font-size: 20px;
  fill: #868e96;
}

// Donut Chart  CSS Ends

// Bar Chart CSS Starts

:host /deep/ .BarChart .ct-series-a .ct-bar:nth-of-type(4n+1) {
  stroke: url($dashboard1-gradient-path +  #gradient7);
}
:host /deep/ .BarChart .ct-series-a .ct-bar:nth-of-type(4n+2) {
  stroke: url($dashboard1-gradient-path +  #gradient5);
}
:host /deep/ .BarChart .ct-series-a .ct-bar:nth-of-type(4n+3) {
  stroke: url($dashboard1-gradient-path +  #gradient6);
}
:host /deep/ .BarChart .ct-series-a .ct-bar:nth-of-type(4n+4) {
  stroke: url($dashboard1-gradient-path +  #gradient4);
}

:host /deep/ .BarChartShadow {
  -webkit-filter: drop-shadow( 0px 20px 8px rgba(0,0,0,0.3) );
  filter: drop-shadow( 0px 20px 8px rgba(0,0,0,0.3) ); /* Same syntax as box-shadow, except
                                                       for the spread property */
}

// Bar Chart CSS Ends

// Widget line Chart CSS Starts

:host /deep/ .WidgetlineChart .ct-point {
  stroke-width: 0px;
}
:host /deep/ .WidgetlineChart .ct-line{
  stroke: #fff;
}


:host /deep/ .WidgetlineChart .ct-grid {
  stroke-dasharray: 0px;
  stroke: rgba(255, 255, 255, 0.2);
}

:host /deep/ .WidgetlineChartshadow {
  -webkit-filter: drop-shadow( 0px 15px 5px rgba(0,0,0,0.8) );
  filter: drop-shadow( 0px 15px 5px rgba(0,0,0,0.8) ); /* Same syntax as box-shadow, except
                                                       for the spread property */
}

// Widget line Chart CSS Ends
h3 {
  margin: 0 0 10px;
}

pre {
  background-color: #f5f5f5;
  padding: 15px;
}
.btn-success {
  color: #fff !important;
}
.btn-danger {
  color: #fff !important;
}
.btn-primary {
  color: #fff !important;
}
.my-drop-zone {
  border: dotted 3px lightgray;
  background-color: #f5f7fa !important;
}
.nv-file-over { border: dotted 3px red; } /* Default class applied to drop zones on over */
.another-file-over-class { border: dotted 3px green; }
.btn-success {
  color: #fff !important;
}


/* Customize the label (the container) */
.container {
  display: block;
  position: relative;
  padding-left: 35px;
  margin-bottom: 12px;
  cursor: pointer;
  font-size: 12px;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}

/* Hide the browser's default checkbox */
.container input {
  position: absolute;
  opacity: 0;
  cursor: pointer;
}

/* Create a custom checkbox */
.checkmark {
  position: absolute;
  top: 0;
  left: 0;
  height: 20px;
  width: 20px;
  background-color: rgba(0, 0, 0, 0.2);
}

/* On mouse-over, add a grey background color */
.container:hover input ~ .checkmark {
  background-color: #ccc;
}

/* When the checkbox is checked, add a blue background */
.container input:checked ~ .checkmark {
  background-color: #00838f;
}

/* Create the checkmark/indicator (hidden when not checked) */
.checkmark:after {
  content: "";
  position: absolute;
  display: none;
}

/* Show the checkmark when checked */
.container input:checked ~ .checkmark:after {
  display: block;
}

/* Style the checkmark/indicator */
.container .checkmark:after {
  left: 9px;
  top: 5px;
  width: 5px;
  height: 10px;
  border: solid white;
  border-width: 0 3px 3px 0;
  -webkit-transform: rotate(45deg);
  -ms-transform: rotate(45deg);
  transform: rotate(45deg);
}
